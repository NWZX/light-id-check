name: Release package

on:
  push:
    branches: [ master ]

permissions:
  contents: write   # push, tags, release
  packages: write   # publish to GitHub Packages

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 22
          registry-url: 'https://npm.pkg.github.com/'
          always-auth: true

      - name: Bump major version in package.json
        id: bump
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          NEW_MAJOR=$((MAJOR + 1))
          NEW_VERSION="$NEW_MAJOR.0.0"
          echo "Bumping version: $CURRENT_VERSION â†’ $NEW_VERSION"

          npm version $NEW_VERSION --no-git-tag-version
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit and push version bump
        run: |
          git config user.email "action@github.com"
          git config user.name  "GitHub Action"
          git add package.json package-lock.json || true
          git commit -m "chore(release): bump major to v${{ steps.bump.outputs.version }}" || echo "No changes"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin HEAD:master

      - name: Create & push tag
        run: |
          TAG="v${{ steps.bump.outputs.version }}"
          git tag -a "$TAG" -m "Release $TAG" || true
          git push origin "$TAG"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.bump.outputs.version }}
          name: Release v${{ steps.bump.outputs.version }}
          body: Automated release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Publish to GitHub Packages
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
